%% 仅展示最常用功能，详细功能可以使用help命令或者上网查寻
%cat 连接数组
A = [1 2; 3 4]
B = [4 5; 6 7]

%cat(2, A, B)相当于[A, B];按行连接
cat(2,A,B)
%cat(1, A, B)相当于[A; B].按列连接
cat(1,A,B)

%%
%find 查找非0元素或满足某条件值

%向量情况
A = [0 1 0 2 3]
find(A)
find(A,2) % 返回前2个非0结果


A = [1,0;0 3] % 矩阵情况，结果为逐列将A的元素进行排序[1 0 0 3],所以结果为 1 4
find(A)

A = [0 1 2 3 4 5]
find(A>2) % 查找满足某一条件情况


%%
% length 计算元素数量
A = [1 2 3]
length(A)
B = [1 2 3;3 4 5]
length(B) %length(a)表示矩阵a的最大的长度，即max(size(a)) 等于3，因为2和3中最大是3；

%%
%linspace 创建向量 用法:linspace(a,b,N) 等同于 [a:(b-a)/N:b]
linspace(1,10,5)
[1:2.25:10]

%%
%logspace 创建向量 
%用法1.logspace(X1,X2)，即在10^X1-10^X2范围内等距产生50个行向量； 
%2.logspace(X1,X2,N)，即在10^X1-10^X2范围内等距产生N个行向量。

logspace(1,10)
logspace(1,10,10)

%% 
%C = max(A) 返回一个数组各不同维中的最大元素。
%[Y,U]=max(A)：返回行向量Y和U，Y向量记录A的每列的最大值，U向量记录每列最大值的行号。
%如果A是一个向量，max(A)返回A中的最大元素。
%如果A是一个矩阵，max(A)将A的每一列作为一个向量，返回一个行向量,向量的第i个元素是矩阵A的第i列上的最大值。

A = [1 3 5; 3 9 0; 9 2 1]
max(A)
[Y,I ] = max(A)
%%
%B = prod(A)；将A矩阵不同维的元素的乘积返回到矩阵B。
%若A为向量，返回的是其所有元素的积；
%若A为矩阵，返回的是按列向量的所有元素的积，然后组成一行向量。
A = [1 2 3]
prod(A)
A = [1 2 3; 4 5 6]
prod(A)
%% 
%reshape 元素相同情况下，对A逐列扫描，对B逐列填充
A = [1 2 3; 2 3 4; 3 4 5; 6 7 8; 1 2 3 ]
reshape(A,3,5)
%%
%size 获取矩阵的行数和列数 注：length()=max(size()).
A = [1 2 3]
size(A)
A = [1 2 3 ; 2 3 4]
size(A)
%%
%sort 默认情况下，对向量或矩阵（案列）进行升序排序
A = [1 2 3]
sort(A)
A = [1 2 3 ; 3 4 1]
sort(A)
sort(A,2)% 对行向量排序
%%
% sum 默认情况下，计算行向量的累加结果
A = [1 2 3]
sum(A) % 默认按行向量
sum(A,2) % 按行向量
sum(A,1) % 按列向量
%%
%Y = eye(n)：返回n*n单位矩阵；
%Y = eye(m,n)：返回m*n单位矩阵；
eye(3)
 eye(3,4)
 %%
 %ones的作用是产生全1矩阵，ones(N)是产生一个N*N的全1矩阵
 ones(3)
 ones(3,2)
 %% 
 %zeros的作用是产生全0矩阵，zeors(N)是产生一个N*N的全0矩阵
 zeros(3)
 zeros(2,4)
 %% 
 %real 计算复数实数部分
 A = 1 - 2i
 real(A)
 %%
 %imag 计算复数虚数部分
  A = 1 - 2i
 imag(A)
 %%
 %abs 计算绝对值或者对复数求模
 A = -3
 abs(A)
 A = [1 -2]
 abs(A)
 A = 1 - 2i
  abs(A)
  %%
 % rand 生成均匀分布随机数
 % rand(n)：生成0到1之间的n阶随机数方阵
 % rand(m,n)：生成0到1之间的m×n的随机数矩阵
rand(3)
rand(3,4)